---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include default variables
  include_vars: "../vars/main.yml"

- name: include release specific variables
  include_vars: "{{ item }}"
  loop: "{{ query('first_found', _params) }}"
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "../vars"
      skip: true

- name: include release specific tasks
  include_tasks: "{{ item }}"
  loop: "{{ query('first_found', _params) }}"
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "."
      skip: true

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: "/etc/libvirt" }
    - { dest: "/etc/profile.d" }
    - dest: "/var/lib/libvirt/images"
      owner: "{{ libvirt_qemu_user }}"
      group: "{{ libvirt_qemu_group }}"
      mode: "1777"
    - dest: "/var/lib/libvirt/qemu"
      owner: "{{ libvirt_qemu_user }}"
      group: "{{ libvirt_qemu_group }}"
      mode: "0750"

- name: umask 0027
  shell: |
    set -euo pipefail
    cd /var/lib/libvirt/images
    umask 0027
  args:
    executable: "/bin/bash"
  changed_when: false
  failed_when: false

- name: copy templates
  template:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { dest: "/etc/libvirt/qemu.conf" }
    - { dest: "/etc/profile.d/vagrant-libvirt.sh" }
  notify:
    - libvirt | systemctl restart libvirtd.service

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/etc/libvirt/qemu.conf" }
    - { dest: "/etc/profile.d/vagrant-libvirt.sh" }
  notify:
    - libvirt | systemctl restart libvirtd.service

- name: flush handlers
  meta: flush_handlers

- name: systemctl start libvirtd.service
  service:
    name: "libvirtd.service"
    state: "started"
    enabled: true
  changed_when: false
  failed_when: false

- name: vagrant plugin install vagrant-libvirt
  environment:
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  shell: |
    set -euo pipefail
    ln -fs /usr/bin/ld.gold /usr/bin/ld
    TMP_DIR="$(mktemp -d)" \
      && cd $TMP_DIR \
      && curl -skL -m 300 -O https://github.com/alvistack/vagrant-libvirt-vagrant-libvirt/releases/download/0.4.1/vagrant-libvirt-0.4.1+virtiofs.gem \
      && vagrant plugin install $TMP_DIR/vagrant-libvirt-0.4.1+virtiofs.gem \
      && rm -rf $TMP_DIR
  args:
    executable: "/bin/bash"
  register: result
  until: result is succeeded
  changed_when: result is not succeeded
